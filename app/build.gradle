plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
//    id 'kotlin-android-extensions'
}

if (file("${rootProject.rootDir}/environment.properties").exists()) {
    apply from: "${rootProject.rootDir}/environment.properties"
}

android {
    namespace = "io.taptalk.taptalklivesample"
    def globalConfig = rootProject.extensions.getByName("ext")

    compileSdk 34

    defaultConfig {
        applicationId "io.taptalk.taptalklivesample"
        minSdk 21
        targetSdk 34
        versionCode taptalklive_version_code
        versionName taptalklive_version_name
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        setProperty("archivesBaseName", applicationId + "-" + versionName)
    }

    signingConfigs {
        release {
            try {
                Properties props = new Properties()
                def propFile = file(globalConfig.signingProps)
                if (propFile.canRead()) {
                    props.load(new FileInputStream(propFile))

                    if (props != null
                            && props.containsKey(globalConfig.keystoreFileName)
                            && props.containsKey(globalConfig.keystorePasswordName)
                            && props.containsKey(globalConfig.keyAliasName)
                            && props.containsKey(globalConfig.keyPasswordName)) {

                        def keystoreFile = file(props[globalConfig.keystoreFileName])
                        if (keystoreFile.canRead()) {
                            storeFile keystoreFile
                            storePassword props[globalConfig.keystorePasswordName]
                            keyAlias props[globalConfig.keyAliasName]
                            keyPassword props[globalConfig.keyPasswordName]
                        } else {
                            println("[GRADLE BUILD ERR]: Keystore file not found: " + props[globalConfig.keystoreFileName])
                            android.buildTypes.release.signingConfig = null
                        }
                    } else {
                        println("[GRADLE BUILD ERR]: File signing.properties found but some entries missing")
                        android.buildTypes.release.signingConfig = null
                    }
                } else {
                    println("[GRADLE BUILD ERR]: File signing.properties not found")
                    android.buildTypes.release.signingConfig = null
                }
            } catch (ex) {
                try {
                    // Bitrise keystore
                    storeFile file(System.getenv("HOME") + "/keystores/taptalklive.jks")
                    storePassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PASSWORD")
                    keyAlias System.getenv("BITRISEIO_ANDROID_KEYSTORE_ALIAS")
                    keyPassword System.getenv("BITRISEIO_ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD")
                } catch (ex2) {
                    throw new InvalidUserDataException("[GRADLE BUILD ERR]: Signing FAILED. Check signing config." + ex2.message)
                }
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            debuggable false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (project.hasProperty('RELEASE_GOOGLE_MAPS_API_KEY')) {
                buildConfigField("String", "GOOGLE_MAPS_API_KEY", "\"${RELEASE_GOOGLE_MAPS_API_KEY}\"")
            } else {
                buildConfigField("String", "GOOGLE_MAPS_API_KEY", "\"\"")
            }
            if (project.hasProperty('RELEASE_TAPLIVE_SDK_APP_KEY_SECRET')) {
                buildConfigField("String", "TAPLIVE_SDK_APP_KEY_SECRET", "\"${RELEASE_TAPLIVE_SDK_APP_KEY_SECRET}\"")
            } else {
                buildConfigField("String", "TAPLIVE_SDK_APP_KEY_SECRET", "\"\"")
            }
        }
        staging {
            signingConfig signingConfigs.debug
            minifyEnabled false
            debuggable true
            applicationIdSuffix '.staging'
            versionNameSuffix '-STAGING'
            if (project.hasProperty('STAGING_GOOGLE_MAPS_API_KEY')) {
                buildConfigField("String", "GOOGLE_MAPS_API_KEY", "\"${STAGING_GOOGLE_MAPS_API_KEY}\"")
            } else {
                buildConfigField("String", "GOOGLE_MAPS_API_KEY", "\"\"")
            }
            if (project.hasProperty('STAGING_TAPLIVE_SDK_APP_KEY_SECRET')) {
                buildConfigField("String", "TAPLIVE_SDK_APP_KEY_SECRET", "\"${STAGING_TAPLIVE_SDK_APP_KEY_SECRET}\"")
            } else {
                buildConfigField("String", "TAPLIVE_SDK_APP_KEY_SECRET", "\"\"")
            }
        }
        dev {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled false
            applicationIdSuffix '.dev'
            versionNameSuffix '-DEV'
            if (project.hasProperty('DEV_GOOGLE_MAPS_API_KEY')) {
                buildConfigField("String", "GOOGLE_MAPS_API_KEY", "\"${DEV_GOOGLE_MAPS_API_KEY}\"")
            } else {
                buildConfigField("String", "GOOGLE_MAPS_API_KEY", "\"\"")
            }
            if (project.hasProperty('DEV_TAPLIVE_SDK_APP_KEY_SECRET')) {
                buildConfigField("String", "TAPLIVE_SDK_APP_KEY_SECRET", "\"${DEV_TAPLIVE_SDK_APP_KEY_SECRET}\"")
            } else {
                buildConfigField("String", "TAPLIVE_SDK_APP_KEY_SECRET", "\"\"")
            }
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    lintOptions {
        disable "Instantiatable"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    implementation "androidx.core:core-ktx:1.7.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(":taptalklive")
    implementation 'com.android.support:multidex:1.0.3'
}
